/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eni.m1.java.ws.panels;

import eni.m1.java.ws.entities.Etudiant;
import eni.m1.java.ws.entities.Utilisateur;
import eni.m1.java.ws.service.EtudiantService;
import eni.m1.java.ws.service.RegistreService;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shirleyodon
 */
public class EtudiantPanel extends javax.swing.JPanel {

    /**
     * Creates new form EtudiantPanel
     */
    
    private DefaultTableModel model;
    private EtudiantService service;
    private RegistreService registreService;
    private Utilisateur profile;
    
    public EtudiantPanel(Utilisateur user) {
        initComponents();
        initTableGrid();
        initModel();
        initService();
        initUser(user);
    }
    
    private void initTableGrid(){
        etudiantTable.setGridColor(Color.lightGray);
        etudiantTable.setShowGrid(true);
    }
    
    private void initModel(){
        model=new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        model.addColumn("Numéro");
        model.addColumn("Nom");
        model.addColumn("Prénom");
        model.addColumn("Niveau");
    }
    
    private void fillModel(Etudiant et) {
    	model.setRowCount(0);
    	model.addRow(
    		new Object[]{
                    et.getNumEtudiant(),
                    et.getNom(),
                    et.getPrenom(),
                    et.getNiveau()
                });
    	etudiantTable.setModel(model);
    }
    
    private void fillModel(Etudiant[] list) {
    	model.setRowCount(0);
    	for(Etudiant et: list){
            model.addRow(
                new Object[]{
                    et.getNumEtudiant(),
                    et.getNom(),
                    et.getPrenom(),
                    et.getNiveau()
                });
        }
    	etudiantTable.setModel(model);
    }
    
    private void initService(){
        registreService=new RegistreService();
        service=new EtudiantService();
        fillModel(service.getAll());
    }
    
    private void initUser(Utilisateur user){
        profile=user;
        if(profile.getStatut().equals("Visitor")){
            ajouterButton.setEnabled(false);
            modifierButton.setEnabled(false);
            supprimerButton.setEnabled(false);
        }
    }
    
    private void addRow(Etudiant et){
        model.addRow(
    		new Object[]{
                    et.getNumEtudiant(),
                    et.getNom(),
                    et.getPrenom(),
                    et.getNiveau()
                });
    	etudiantTable.setModel(model);
    }
    
    private void eraseField(){
        numeroField.setText("");
        nomField.setText("");
        prenomField.setText("");
        niveauComboBox.setSelectedIndex(0);
        rechercheComboBox.setSelectedIndex(0);
        rechercheField.setText("");
    }
    
    private boolean estVide(JTextField field){
        return field.getText().equals("");
    }
    
    public void setProfile(Utilisateur profile) {
        this.profile = profile;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodyPanel = new javax.swing.JPanel();
        infoPanel = new javax.swing.JPanel();
        numeroLabel = new javax.swing.JLabel();
        numeroField = new javax.swing.JTextField();
        nomLabel = new javax.swing.JLabel();
        nomField = new javax.swing.JTextField();
        prenomLabel = new javax.swing.JLabel();
        prenomField = new javax.swing.JTextField();
        niveauLabel = new javax.swing.JLabel();
        niveauComboBox = new javax.swing.JComboBox<>();
        listePanel = new javax.swing.JPanel();
        ListScrollPane = new javax.swing.JScrollPane();
        etudiantTable = new javax.swing.JTable();
        operationPanel = new javax.swing.JPanel();
        ajouterButton = new javax.swing.JButton();
        supprimerButton = new javax.swing.JButton();
        modifierButton = new javax.swing.JButton();
        actualiserButton = new javax.swing.JButton();
        recherchePanel = new javax.swing.JPanel();
        rechercheParLabel = new javax.swing.JLabel();
        rechercheComboBox = new javax.swing.JComboBox<>();
        rechercheField = new javax.swing.JTextField();
        rechercheButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(44, 62, 80));
        setAutoscrolls(true);
        setMaximumSize(new java.awt.Dimension(769, 424));
        setMinimumSize(new java.awt.Dimension(768, 423));
        setPreferredSize(new java.awt.Dimension(768, 423));

        bodyPanel.setBackground(new java.awt.Color(44, 62, 80));

        infoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INFO SUR L'ETUDIANT", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Trebuchet MS", 1, 20), java.awt.Color.lightGray)); // NOI18N
        infoPanel.setOpaque(false);

        numeroLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        numeroLabel.setForeground(new java.awt.Color(236, 240, 241));
        numeroLabel.setText("Numéro");

        numeroField.setEditable(false);
        numeroField.setBackground(new java.awt.Color(108, 122, 137));
        numeroField.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        numeroField.setForeground(new java.awt.Color(228, 241, 254));
        numeroField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        nomLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        nomLabel.setForeground(new java.awt.Color(236, 240, 241));
        nomLabel.setText("Nom");

        nomField.setBackground(new java.awt.Color(108, 122, 137));
        nomField.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        nomField.setForeground(new java.awt.Color(228, 241, 254));
        nomField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nomField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        prenomLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        prenomLabel.setForeground(new java.awt.Color(236, 240, 241));
        prenomLabel.setText("Prénom");

        prenomField.setBackground(new java.awt.Color(108, 122, 137));
        prenomField.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        prenomField.setForeground(new java.awt.Color(228, 241, 254));
        prenomField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        prenomField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        niveauLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        niveauLabel.setForeground(new java.awt.Color(236, 240, 241));
        niveauLabel.setText("Niveau");

        niveauComboBox.setBackground(new java.awt.Color(108, 122, 137));
        niveauComboBox.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        niveauComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "L1", "L2", "L3", "M1", "M2" }));
        niveauComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(niveauLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(numeroLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(nomLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(prenomLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numeroField, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prenomField)
                    .addComponent(niveauComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        infoPanelLayout.setVerticalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numeroLabel)
                    .addComponent(numeroField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prenomLabel)
                    .addComponent(prenomField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(niveauLabel)
                    .addComponent(niveauComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        listePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LISTE DES ETUDIANTS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Trebuchet MS", 1, 20), java.awt.Color.lightGray)); // NOI18N
        listePanel.setOpaque(false);

        etudiantTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Numéro", "Nom", "Prénom", "Niveau"
            }
        ));
        etudiantTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        etudiantTable.setRowHeight(20);
        etudiantTable.setShowGrid(true);
        etudiantTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                etudiantTableMouseClicked(evt);
            }
        });
        ListScrollPane.setViewportView(etudiantTable);

        javax.swing.GroupLayout listePanelLayout = new javax.swing.GroupLayout(listePanel);
        listePanel.setLayout(listePanelLayout);
        listePanelLayout.setHorizontalGroup(
            listePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        listePanelLayout.setVerticalGroup(
            listePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listePanelLayout.createSequentialGroup()
                .addComponent(ListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        operationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "OPERATIONS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Trebuchet MS", 1, 20), java.awt.Color.lightGray)); // NOI18N
        operationPanel.setOpaque(false);

        ajouterButton.setBackground(new java.awt.Color(108, 122, 137));
        ajouterButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ajouterButton.setForeground(new java.awt.Color(228, 241, 254));
        ajouterButton.setText("Ajouter");
        ajouterButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ajouterButton.setMinimumSize(new java.awt.Dimension(79, 25));
        ajouterButton.setPreferredSize(new java.awt.Dimension(80, 25));
        ajouterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterButtonActionPerformed(evt);
            }
        });

        supprimerButton.setBackground(new java.awt.Color(108, 122, 137));
        supprimerButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        supprimerButton.setForeground(new java.awt.Color(228, 241, 254));
        supprimerButton.setText("Supprimer");
        supprimerButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        supprimerButton.setPreferredSize(new java.awt.Dimension(80, 25));
        supprimerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerButtonActionPerformed(evt);
            }
        });

        modifierButton.setBackground(new java.awt.Color(108, 122, 137));
        modifierButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        modifierButton.setForeground(new java.awt.Color(228, 241, 254));
        modifierButton.setText("Modifier");
        modifierButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        modifierButton.setPreferredSize(new java.awt.Dimension(80, 25));
        modifierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierButtonActionPerformed(evt);
            }
        });

        actualiserButton.setBackground(new java.awt.Color(108, 122, 137));
        actualiserButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        actualiserButton.setForeground(new java.awt.Color(228, 241, 254));
        actualiserButton.setText("Actualiser");
        actualiserButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        actualiserButton.setPreferredSize(new java.awt.Dimension(80, 25));
        actualiserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualiserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout operationPanelLayout = new javax.swing.GroupLayout(operationPanel);
        operationPanel.setLayout(operationPanelLayout);
        operationPanelLayout.setHorizontalGroup(
            operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(operationPanelLayout.createSequentialGroup()
                        .addComponent(ajouterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(supprimerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(operationPanelLayout.createSequentialGroup()
                        .addComponent(modifierButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(actualiserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        operationPanelLayout.setVerticalGroup(
            operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, operationPanelLayout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addGroup(operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ajouterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(supprimerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modifierButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(actualiserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        recherchePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "RECHERCHE", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Trebuchet MS", 1, 20), java.awt.Color.lightGray)); // NOI18N
        recherchePanel.setOpaque(false);

        rechercheParLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        rechercheParLabel.setForeground(new java.awt.Color(236, 240, 241));
        rechercheParLabel.setText("Par");

        rechercheComboBox.setBackground(new java.awt.Color(108, 122, 137));
        rechercheComboBox.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rechercheComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "numéro", "mot-clé", "niveau" }));
        rechercheComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        rechercheField.setBackground(new java.awt.Color(108, 122, 137));
        rechercheField.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        rechercheField.setForeground(new java.awt.Color(228, 241, 254));
        rechercheField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        rechercheField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        rechercheButton.setBackground(new java.awt.Color(108, 122, 137));
        rechercheButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        rechercheButton.setForeground(new java.awt.Color(228, 241, 254));
        rechercheButton.setText("Rechercher");
        rechercheButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        rechercheButton.setPreferredSize(new java.awt.Dimension(80, 25));
        rechercheButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout recherchePanelLayout = new javax.swing.GroupLayout(recherchePanel);
        recherchePanel.setLayout(recherchePanelLayout);
        recherchePanelLayout.setHorizontalGroup(
            recherchePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, recherchePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rechercheParLabel)
                .addGap(18, 18, 18)
                .addComponent(rechercheComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(rechercheField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, recherchePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rechercheButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );
        recherchePanelLayout.setVerticalGroup(
            recherchePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recherchePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(recherchePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rechercheParLabel)
                    .addComponent(rechercheComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rechercheField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rechercheButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(infoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(operationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(recherchePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(operationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addComponent(listePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(recherchePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void move(int i){
        try{
            numeroField.setText(model.getValueAt(i, 0).toString());
            nomField.setText(model.getValueAt(i, 1).toString());
            prenomField.setText(model.getValueAt(i, 2).toString());
            niveauComboBox.setSelectedItem(model.getValueAt(i, 3).toString());
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getLocalizedMessage(), "Erreur de deplacement", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void ajouterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterButtonActionPerformed
        // TODO add your handling code here:
        Etudiant et;
        
        if(estVide(nomField) || estVide(prenomField)){
            JOptionPane.showMessageDialog(null, "Les champs 'Nom' ou 'Prénom' ne peuvent être laissés vides", "Champs vide(s)", JOptionPane.WARNING_MESSAGE);
        }else{
            et=new Etudiant(nomField.getText(), prenomField.getText(), niveauComboBox.getSelectedItem().toString());
            
            String numEtudiant=service.post(et);
            
            if(numEtudiant==null){
                JOptionPane.showMessageDialog(null, "Echec de l'ajout de l'étudiant", "Erreur d'ajout", JOptionPane.ERROR_MESSAGE);
            }else{
                et.setNumEtudiant(numEtudiant);
                String message="L'étudiant(e) :\n"
                                    +"\tN° = '"+et.getNumEtudiant()+"'\n"
                                    +"\tNom = '"+et.getNom()+"'\n"
                                    +"\tPrénom = '"+et.getPrenom()+"'\n"
                                    +"\tNiveau = '"+et.getNiveau()+"'\n"
                                +"a été ajouté(e) avec succès";
                JOptionPane.showMessageDialog(null, message, "Succès de l'ajout", JOptionPane.INFORMATION_MESSAGE);
                registreService.saveToLog(profile.getLogin(), "AJOUT", numEtudiant);
                eraseField();
                addRow(et);
            }
        }  
    }//GEN-LAST:event_ajouterButtonActionPerformed

    private void supprimerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerButtonActionPerformed
        // TODO add your handling code here:
        Integer deleted;
        String numEtudiant;
        
        if(!estVide(numeroField)){
            numEtudiant=numeroField.getText();
            
            if(JOptionPane.showConfirmDialog(null, "Voullez-vous vraiment supprimer l'etudiant(e) numéro=' "+numEtudiant+ "' ?", "Confirmation de suppression",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)== JOptionPane.YES_OPTION){
                deleted=service.delete(numEtudiant);

                if(deleted==1){
                    JOptionPane.showMessageDialog(null, "L'étudiant(e) numéro= '"+numEtudiant+"' a été supprimé(e) avec succès", "Succès de suppression", JOptionPane.INFORMATION_MESSAGE);
                    registreService.saveToLog(profile.getLogin(), "SUPPRESSION", numEtudiant);
                    eraseField();
                    fillModel(service.getAll());
                }
                else{
                    JOptionPane.showMessageDialog(null, "Echec de la suppression de l'étudiant(e) numéro= '"+numEtudiant+"'", "Erreur de suppression", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_supprimerButtonActionPerformed

    private void modifierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierButtonActionPerformed
        // TODO add your handling code here:
        Etudiant et;
        Integer updated;
        String numEtudiant;
        
        if(!estVide(numeroField)){
            numEtudiant=numeroField.getText();
            
            if(estVide(nomField) || estVide(prenomField)){
                JOptionPane.showMessageDialog(null, "Les champs 'Nom' ou 'Prénom' ne peuvent être laissés vides", "Champs vide(s)", JOptionPane.WARNING_MESSAGE);
            }else{
                if(JOptionPane.showConfirmDialog(null, "Voullez-vous enregistrer les modifications apportés a l'étudiant numéro= '"+numEtudiant+"' ?", "Confirmation de mise à jour",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)== JOptionPane.YES_OPTION){
                    et=new Etudiant(nomField.getText(), prenomField.getText(), niveauComboBox.getSelectedItem().toString());

                    updated=service.put(numEtudiant, et);

                    if(updated==1){
                        JOptionPane.showMessageDialog(null, "Les modifications ont été enregistrées avec succès", "Succès de mise à jour", JOptionPane.INFORMATION_MESSAGE);
                        registreService.saveToLog(profile.getLogin(), "MODIFICATION", numEtudiant);
                        eraseField();
                        fillModel(service.getAll());
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Echec de l'enregistrement des modifications", "Erreur de mise à jour", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_modifierButtonActionPerformed

    private void actualiserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualiserButtonActionPerformed
        // TODO add your handling code here:
        eraseField();
        fillModel(service.getAll());
    }//GEN-LAST:event_actualiserButtonActionPerformed

    private void rechercheButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheButtonActionPerformed
        // TODO add your handling code here:
        String searchType, lookingFor;
        Etudiant etudiant, listEtudiant[];
        
        if(estVide(rechercheField)){
            JOptionPane.showMessageDialog(null, "Le champs de recherche est vide", "Champs vide", JOptionPane.WARNING_MESSAGE);
        }else{
            searchType=rechercheComboBox.getSelectedItem().toString();
            lookingFor=rechercheField.getText();
            
            if(searchType.equals("numéro")) {
        	etudiant=service.get(lookingFor);
        		
        	if(etudiant.getNumEtudiant()==null) {
                    JOptionPane.showMessageDialog(null, "Aucun(e) étudiant(e) "+searchType+"= ' "+lookingFor+" ' n'a été trouvé(e)", "Aucun résultat", JOptionPane.WARNING_MESSAGE);
        	}else {
                    fillModel(etudiant);
                    eraseField();
        	}
            }else{
        	if(searchType.equals("niveau"))
                    listEtudiant=service.getAll(lookingFor);           
        	else
                    listEtudiant=service.getKW(lookingFor);
        		
        	if(listEtudiant.length==0){
                    JOptionPane.showMessageDialog(null, "Aucun(e) étudiant(e) "+searchType+"= ' "+lookingFor+" ' n'a été trouvé(e)", "Aucun résultat", JOptionPane.WARNING_MESSAGE);
        	}else{
                    fillModel(listEtudiant);
                    eraseField();
        	}		
            }
            registreService.saveToLog(profile.getLogin(), "RECHERCHE", "Etudiant ("+searchType+" = '"+lookingFor+"')");
        }
    }//GEN-LAST:event_rechercheButtonActionPerformed

    private void etudiantTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_etudiantTableMouseClicked
        // TODO add your handling code here:
        try{
            move(etudiantTable.getSelectedRow());
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getLocalizedMessage(), "Erreur de deplacement", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_etudiantTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ListScrollPane;
    private javax.swing.JButton actualiserButton;
    private javax.swing.JButton ajouterButton;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JTable etudiantTable;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JPanel listePanel;
    private javax.swing.JButton modifierButton;
    private javax.swing.JComboBox<String> niveauComboBox;
    private javax.swing.JLabel niveauLabel;
    private javax.swing.JTextField nomField;
    private javax.swing.JLabel nomLabel;
    private javax.swing.JTextField numeroField;
    private javax.swing.JLabel numeroLabel;
    private javax.swing.JPanel operationPanel;
    private javax.swing.JTextField prenomField;
    private javax.swing.JLabel prenomLabel;
    private javax.swing.JButton rechercheButton;
    private javax.swing.JComboBox<String> rechercheComboBox;
    private javax.swing.JTextField rechercheField;
    private javax.swing.JPanel recherchePanel;
    private javax.swing.JLabel rechercheParLabel;
    private javax.swing.JButton supprimerButton;
    // End of variables declaration//GEN-END:variables
}
