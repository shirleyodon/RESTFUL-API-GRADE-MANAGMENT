/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eni.m1.java.ws.dialog;

import eni.m1.java.ws.entities.Utilisateur;
import eni.m1.java.ws.service.ProfilService;
import eni.m1.java.ws.service.RegistreService;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shirleyodon
 */
public class ListProfiles extends javax.swing.JDialog {

    /**
     * Creates new form ListProfiles
     */
    
    private DefaultTableModel model;
    private Utilisateur profile;
    private ProfilService service;
    private RegistreService registreService;
    
    public ListProfiles(java.awt.Frame parent, boolean modal, Utilisateur profile) {
        super(parent, modal);
        initComponents();
        initTableGrid();
        initModel();
        initService();
        this.profile=profile;
        this.setLocationRelativeTo(null);
    }
    
    private void initTableGrid(){
        profilesTable.setGridColor(Color.lightGray);
        profilesTable.setShowGrid(true);
    }
    
    private void initModel(){
        model=new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        model.addColumn("Login");
        model.addColumn("Statut");
    }
    
    private void fillModel(Utilisateur[] list) {
    	model.setRowCount(0);
    	for(Utilisateur user: list){
            model.addRow(
                new Object[]{
                    user.getLogin(),
                    user.getStatut()
                });
        }
    	profilesTable.setModel(model);
    }
    
    private void initService(){
        registreService=new RegistreService();
        service=new ProfilService();
        fillModel(service.getAll());
    }
    
    public Utilisateur afficher(){
        setVisible(true);
        return profile;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titlePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        fermerLabel = new javax.swing.JLabel();
        bodyPanel = new javax.swing.JPanel();
        listPanel = new javax.swing.JPanel();
        listScrollPane = new javax.swing.JScrollPane();
        profilesTable = new javax.swing.JTable();
        creerButton = new javax.swing.JButton();
        afficherButton = new javax.swing.JButton();
        supprimerButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        titlePanel.setBackground(new java.awt.Color(248, 148, 6));

        titleLabel.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Liste des utilisateurs");

        fermerLabel.setBackground(new java.awt.Color(248, 148, 6));
        fermerLabel.setFont(new java.awt.Font("Trebuchet MS", 0, 19)); // NOI18N
        fermerLabel.setForeground(new java.awt.Color(255, 255, 255));
        fermerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fermerLabel.setText("X");
        fermerLabel.setOpaque(true);
        fermerLabel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                fermerLabelMouseMoved(evt);
            }
        });
        fermerLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fermerLabelMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fermerLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150)
                .addComponent(fermerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(fermerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        bodyPanel.setBackground(new java.awt.Color(44, 62, 80));

        listPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Trebuchet MS", 1, 20), java.awt.Color.lightGray)); // NOI18N
        listPanel.setOpaque(false);

        profilesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Login", "Statut"
            }
        ));
        profilesTable.setRowHeight(20);
        profilesTable.setShowGrid(true);
        listScrollPane.setViewportView(profilesTable);

        creerButton.setBackground(new java.awt.Color(51, 255, 51));
        creerButton.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        creerButton.setForeground(new java.awt.Color(255, 255, 255));
        creerButton.setText("Creer");
        creerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creerButtonActionPerformed(evt);
            }
        });

        afficherButton.setBackground(new java.awt.Color(34, 167, 240));
        afficherButton.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        afficherButton.setForeground(new java.awt.Color(255, 255, 255));
        afficherButton.setText("Afficher");
        afficherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afficherButtonActionPerformed(evt);
            }
        });

        supprimerButton.setBackground(new java.awt.Color(242, 38, 19));
        supprimerButton.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        supprimerButton.setForeground(new java.awt.Color(255, 255, 255));
        supprimerButton.setText("Supprimer");
        supprimerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listPanelLayout = new javax.swing.GroupLayout(listPanel);
        listPanel.setLayout(listPanelLayout);
        listPanelLayout.setHorizontalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listPanelLayout.createSequentialGroup()
                        .addComponent(creerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(afficherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(supprimerButton)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listPanelLayout.createSequentialGroup()
                        .addComponent(listScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))))
        );
        listPanelLayout.setVerticalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(creerButton)
                    .addComponent(afficherButton)
                    .addComponent(supprimerButton)))
        );

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(listPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(listPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fermerLabelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fermerLabelMouseMoved
        // TODO add your handling code here:
        fermerLabel.setBackground(new java.awt.Color(242,38,19));
    }//GEN-LAST:event_fermerLabelMouseMoved

    private void fermerLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fermerLabelMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_fermerLabelMouseClicked

    private void fermerLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fermerLabelMouseExited
        // TODO add your handling code here:
        fermerLabel.setBackground(new java.awt.Color(248,148,6));
    }//GEN-LAST:event_fermerLabelMouseExited

    private void creerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creerButtonActionPerformed
        // TODO add your handling code here:
        NewProfile newProfile=new NewProfile(null, true, profile);
        Utilisateur newUser=newProfile.afficher();
        if(newUser.getLogin()!=null){
            model.addRow(new Object[]{newUser.getLogin(), newUser.getStatut()});
            profilesTable.setModel(model);
        }
        //listAllProfiles();
    }//GEN-LAST:event_creerButtonActionPerformed

    private void afficherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afficherButtonActionPerformed
        // TODO add your handling code here:
        try{
            int selectedRowIndex=profilesTable.getSelectedRow();
            String selectedLogin=model.getValueAt(selectedRowIndex, 0).toString();
            Profile passiveProfile=new Profile(null, true, profile.getLogin(), selectedLogin);
            Utilisateur profileReturned=passiveProfile.afficher();
            model.setValueAt(profileReturned.getLogin(), selectedRowIndex, 0);
            model.setValueAt(profileReturned.getStatut(), selectedRowIndex, 1);
            profilesTable.setModel(model);
            
            if(profile.getLogin().equals(selectedLogin))
               profile=profileReturned;
            
            /*
                listAllProfiles();
                viewProfile.setVisible(true);
            */
        }catch(ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(null, "Aucun utilisateur n'a été selectionné", "Erreur d'affichage", JOptionPane.ERROR_MESSAGE);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getLocalizedMessage(), "Erreur d'affichage", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_afficherButtonActionPerformed

    private void supprimerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerButtonActionPerformed
        // TODO add your handling code here:
        try{
            int selectedRowIndex=profilesTable.getSelectedRow();
            String selectedLogin=model.getValueAt(selectedRowIndex, 0).toString(),
                   message1="Etes-vous sûr de vouloir supprimer votre propre profil d'utilisateur '"+selectedLogin+"' ?",
                   message2="Voulez-vous vraiment supprimer l'utilisateur '"+selectedLogin+"' ?";

            if(JOptionPane.showConfirmDialog(null, (profile.getLogin().equals(selectedLogin))? message1: message2, "Confirmation de suppression",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)== JOptionPane.YES_OPTION){

                int deleted=service.delete(selectedLogin);

                if(deleted==1){
                    JOptionPane.showMessageDialog(null, "L'utilisateur '"+selectedLogin+"' a été supprimé avec succès", "Succès de suppression", JOptionPane.INFORMATION_MESSAGE);
                    registreService.saveToLog(profile.getLogin(), "SUPPRESSION", selectedLogin);
                    
                    if(profile.getLogin().equals(selectedLogin)){
                        profile=new Utilisateur();
                        dispose();
                    }else{
                        model.removeRow(selectedRowIndex);
                        profilesTable.setModel(model);
                    }
                    //listAllProfiles();
                }else
                    JOptionPane.showMessageDialog(null, "Echec de la suppression de l'utilisateur '"+selectedLogin+"'", "Erreur de suppression", JOptionPane.ERROR_MESSAGE);
            }
        }catch(ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(null, "Aucun utilisateur n'a été selectionné", "Erreur de suppression", JOptionPane.ERROR_MESSAGE);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getLocalizedMessage(), "Erreur de suppression", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_supprimerButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListProfiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListProfiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListProfiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListProfiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Utilisateur user=new Utilisateur("NOM","Prenom","Login","motDePasse","Statut");
                ListProfiles dialog = new ListProfiles(new javax.swing.JFrame(), true, user);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                Utilisateur returned=dialog.afficher();
                if(returned.getLogin()==null)
                    System.out.println("Le profil courant a été supprimé");
                else
                    System.out.println(returned);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton afficherButton;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JButton creerButton;
    private javax.swing.JLabel fermerLabel;
    private javax.swing.JPanel listPanel;
    private javax.swing.JScrollPane listScrollPane;
    private javax.swing.JTable profilesTable;
    private javax.swing.JButton supprimerButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel titlePanel;
    // End of variables declaration//GEN-END:variables
}
